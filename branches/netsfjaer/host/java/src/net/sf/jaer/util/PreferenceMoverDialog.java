/*
 * PreferenceMoverDialog.java
 *
 * Created on November 23, 2008, 2:06 PM
 */
package net.sf.jaer.util;

import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.BackingStoreException;
import java.util.prefs.Preferences;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JTextField;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author  thkoch
 */
public class PreferenceMoverDialog extends javax.swing.JDialog {

    Logger log = Logger.getLogger("net.sf.jaer.util");
    Preferences prefs = Preferences.userNodeForPackage(this.getClass());
    String fromPath = prefs.get("PreferenceMoverDialog.fromPath", "");
    String toPath = prefs.get("PreferenceMoverDialog.toPath", "");
    Preferences workingPrefs = null;
    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;

    /** Creates new form PreferenceMoverDialog */
    public PreferenceMoverDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        fromPackageTextField.setText(fromPath);
        toPackageTextField.setText(toPath);
    }

    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
        return returnStatus;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        fromPackageTextField = new javax.swing.JTextField();
        toPackageTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        fromPackageChooseButton = new javax.swing.JButton();
        toPackageChooseButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        statusField = new javax.swing.JTextField();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        fromPackageTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromPackageTextFieldActionPerformed(evt);
            }
        });

        toPackageTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toPackageTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setText("From package");

        jLabel2.setText("To package");

        fromPackageChooseButton.setText("Choose...");
        fromPackageChooseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fromPackageChooseButtonActionPerformed(evt);
            }
        });

        toPackageChooseButton.setText("Choose...");
        toPackageChooseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toPackageChooseButtonActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Status"));

        statusField.setEditable(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusField, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(statusField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fromPackageTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                            .addComponent(toPackageTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cancelButton)
                                .addComponent(fromPackageChooseButton))
                            .addComponent(toPackageChooseButton)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(516, Short.MAX_VALUE)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {cancelButton, okButton});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fromPackageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(fromPackageChooseButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(toPackageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toPackageChooseButton))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        prefs.put("PreferenceMoverDialog.toPath", toPath);
        prefs.put("PreferenceMoverDialog.fromPath", fromPath);
 
        if (fromPath != null && toPath != null) {
            Preferences fromPrefs = Preferences.userRoot().node(fromPath);
            Preferences toPrefs = Preferences.userRoot().node(toPath);
                   showStatus("moving Preferences from \"" + fromPath + "\" to \"" + toPath + "\"");
        }
        doClose(RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

private void fromPackageTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromPackageTextFieldActionPerformed
    if (isPrefNode(fromPackageTextField.getText())) {//GEN-LAST:event_fromPackageTextFieldActionPerformed
        fromPath = fromPackageTextField.getName();
    }
}                                                    

private void fromPackageChooseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fromPackageChooseButtonActionPerformed
    fromPath = choosePath(fromPackageTextField);
    System.out.println("fromPath=" + fromPath);
}//GEN-LAST:event_fromPackageChooseButtonActionPerformed

private void toPackageTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toPackageTextFieldActionPerformed
    if (isPrefNode(toPackageTextField.getText())) {
        toPath = toPackageTextField.getName();
    }
}//GEN-LAST:event_toPackageTextFieldActionPerformed

private void toPackageChooseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toPackageChooseButtonActionPerformed
    toPath = choosePath(toPackageTextField);
    System.out.println("toPath=" + toPath);
}//GEN-LAST:event_toPackageChooseButtonActionPerformed

private boolean isPrefNode(String pathName){
   try {
        workingPrefs = Preferences.userRoot();
        pathName.replace('.', '/');
        boolean exists = workingPrefs.nodeExists(pathName);
        if(exists){
            showStatus(pathName + " IS an existing Preference node");
        }else{
            showStatus(pathName+" is NOT an existing Preference node");
        }
        return exists;
    } catch (BackingStoreException ex) {
        showStatus(ex.toString());
        return false;
    }
}

private void showStatus(String s){
   statusField.setText(s);
   log.info(s);
}

private String choosePath(JTextField textField){
    String path="";
    JFileChooser chooser = new JFileChooser(System.getProperty("user.dir") + File.separator + "src");
    chooser.setMultiSelectionEnabled(false);
    chooser.setDialogTitle("Choose a source path");
    chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
    chooser.setFileFilter(new FileFilter() {

        @Override
        public boolean accept(File f) {
            if (f.isDirectory() && !f.getName().equals(".svn") && !f.getName().equals("doc-files")) {
                return true;
            } else {
                return false;
            }
        }

        @Override
        public String getDescription() {
            return "Package folder in jAER preferences tree";
        }
    });
    int ret = chooser.showOpenDialog(this);
    if (ret == JFileChooser.APPROVE_OPTION) {
        final String srcTree = "host" + File.separator + "java" + File.separator + "src";
        File f = chooser.getSelectedFile();
        String p = f.getAbsolutePath();
        if (p.indexOf(srcTree) == -1) {
            showStatus(f.getName() + " doesn't appear to be in source tree");
        } else {
            p = p.substring(p.indexOf(srcTree) + srcTree.length());
            showStatus(path+" looks like part of source tree");
        }
        path = p.replace('\\', '/');
        textField.setText(path);
        isPrefNode(path);
    }
    return path;
}

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                PreferenceMoverDialog dialog = new PreferenceMoverDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
                while(dialog.getReturnStatus()!=RET_CANCEL){
                    dialog.setVisible(true);
                };
                System.exit(0);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton fromPackageChooseButton;
    private javax.swing.JTextField fromPackageTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton okButton;
    private javax.swing.JTextField statusField;
    private javax.swing.JButton toPackageChooseButton;
    private javax.swing.JTextField toPackageTextField;
    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;
}

package cl.eye;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.prefs.Preferences;

import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

import net.sf.jaer.hardwareinterface.HardwareInterfaceException;

/**
 * simple GUI to most basic settings of CLCamera()
 *
 * @author andstein
 */
public class PSeye_ConfigurationPanel extends javax.swing.JPanel 
    implements ChangeListener,ActionListener {
    
    static Preferences prefs = Preferences.userNodeForPackage(PSeye_ConfigurationPanel.class);
    
    PSeye_OpticalFlowHardwareInterface hardwareInterface;

    /** Creates new form PSeye_ConfigurationPanel */
    public PSeye_ConfigurationPanel(PSeye_OpticalFlowHardwareInterface hw) {
        hardwareInterface= hw;
        
        initComponents();
        
        gainText.addActionListener(this);
        offsetText.addActionListener(this);
        xSlider.addChangeListener(this);
        ySlider.addChangeListener(this);
        sizeSlider.addChangeListener(this);
        // initialize values from sliders
        stateChanged(null);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        modeCB = new javax.swing.JComboBox();
        sizeSlider = new javax.swing.JSlider();
        ySlider = new javax.swing.JSlider();
        xSlider = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        autoContrastCB = new javax.swing.JCheckBox();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        loadButton = new javax.swing.JButton();
        saveButton = new javax.swing.JButton();
        offsetText = new javax.swing.JTextField();
        gainText = new javax.swing.JTextField();

        modeCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "QVGA 30fps", "QVGA 60fps", "QVGA 120fps" }));
        modeCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modeCBActionPerformed(evt);
            }
        });

        sizeSlider.setMaximum(200);
        sizeSlider.setMinimum(20);
        sizeSlider.setValue(20);

        ySlider.setMaximum(220);
        ySlider.setValue(0);

        xSlider.setMaximum(300);
        xSlider.setValue(0);

        jLabel1.setText("x");

        jLabel2.setText("y");

        jLabel3.setText("sz");

        autoContrastCB.setText("auto contrast");
        autoContrastCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoContrastCBActionPerformed(evt);
            }
        });

        jLabel4.setText("offset");

        jLabel5.setText("gain");

        loadButton.setText("load");
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        saveButton.setText("save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        offsetText.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        offsetText.setText("0.0000");

        gainText.setFont(new java.awt.Font("Courier New", 0, 11)); // NOI18N
        gainText.setText("0.0000");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(modeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(loadButton)
                    .addComponent(saveButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(sizeSlider, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                    .addComponent(ySlider, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                    .addComponent(xSlider, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(gainText, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(offsetText, javax.swing.GroupLayout.DEFAULT_SIZE, 91, Short.MAX_VALUE))
                        .addContainerGap(229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(autoContrastCB)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(modeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(xSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel1)
                                .addComponent(jLabel4)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ySlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2)
                                .addComponent(jLabel5))
                            .addComponent(loadButton)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(offsetText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gainText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(saveButton)
                    .addComponent(sizeSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(autoContrastCB)
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void modeCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modeCBActionPerformed
        // hard coded !
        try {
            switch (modeCB.getSelectedIndex()) {
                case 0:
                    hardwareInterface.setCameraMode(CLCamera.CameraMode.QVGA_MONO_30);
                    break;
                case 1:
                    hardwareInterface.setCameraMode(CLCamera.CameraMode.QVGA_MONO_60);
                    break;
                case 2:
                    hardwareInterface.setCameraMode(CLCamera.CameraMode.QVGA_MONO_125);
                    break;
                default:
                    throw new RuntimeException("index out of bounds");
            }
        } catch (HardwareInterfaceException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_modeCBActionPerformed

    private void updateContrastParameters() {
        hardwareInterface.setContrastParameters(
                Float.parseFloat(offsetText.getText()),
                Float.parseFloat(gainText.getText())
                );
    }
    
    private void updateInterpolationParameters() {
        hardwareInterface.setInterpolationParameters(
                xSlider.getValue(),
                ySlider.getValue(),
                sizeSlider.getValue()
                );
    }
    
    private void autoContrastCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoContrastCBActionPerformed
        if (autoContrastCB.isSelected()) {
            gainText.setEnabled(false);
            offsetText.setEnabled(false);
            hardwareInterface.setAutoContrast(true);
        } else {
            hardwareInterface.setAutoContrast(false);
            gainText.setText(Float.toString(hardwareInterface.getCurrentGain()));
            offsetText.setText(Float.toString(hardwareInterface.getCurrentOffset()));
            gainText.setEnabled(true);
            offsetText.setEnabled(true);
        }
    }//GEN-LAST:event_autoContrastCBActionPerformed

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        gainText.setText(Float.toString(prefs.getFloat("gain", 0))); 
        offsetText.setText(Float.toString(prefs.getFloat("offset", 0))); 
        xSlider.setValue(prefs.getInt("x", 0));
        ySlider.setValue(prefs.getInt("y", 0));
        sizeSlider.setValue(prefs.getInt("size", 20));
        stateChanged(null);
    }//GEN-LAST:event_loadButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        prefs.putFloat("gain", Float.parseFloat(gainText.getText()));
        prefs.putFloat("offset", Float.parseFloat(offsetText.getText()));
        prefs.putInt("x", xSlider.getValue());
        prefs.putInt("y", ySlider.getValue());
        prefs.putInt("size", sizeSlider.getValue());
    }//GEN-LAST:event_saveButtonActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox autoContrastCB;
    private javax.swing.JTextField gainText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JButton loadButton;
    private javax.swing.JComboBox modeCB;
    private javax.swing.JTextField offsetText;
    private javax.swing.JButton saveButton;
    private javax.swing.JSlider sizeSlider;
    private javax.swing.JSlider xSlider;
    private javax.swing.JSlider ySlider;
    // End of variables declaration//GEN-END:variables

    @Override
    public void stateChanged(ChangeEvent e) {
        updateContrastParameters();
        updateInterpolationParameters();
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        updateContrastParameters();
        updateInterpolationParameters();
    }
}

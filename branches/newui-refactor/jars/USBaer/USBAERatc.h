/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class USBAERatc */

#ifndef _Included_USBAERatc
#define _Included_USBAERatc
#ifdef __cplusplus
extern "C" {
#endif
/* Inaccessible static: log */
/* Inaccessible static: libLoaded */
#undef USBAERatc_MAX_BYTES_PER_BIAS
#define USBAERatc_MAX_BYTES_PER_BIAS 4L
/*
 * Class:     USBAERatc
 * Method:    nativeOpen
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT jboolean JNICALL Java_net_sf_jaer_hardwareinterface_usb_usbaermapper_USBAERatc_nativeOpen
  (JNIEnv *, jobject, jstring, jstring);

/*
 * Class:     USBAERatc
 * Method:    nativeUpload
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_net_sf_jaer_hardwareinterface_usb_usbaermapper_USBAERatc_nativeUpload
  (JNIEnv *, jobject, jstring, jstring, jboolean, jboolean, jboolean, jlong);

/*
 * Class:     USBAERatc
 * Method:    nativeSend
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_net_sf_jaer_hardwareinterface_usb_usbaermapper_USBAERatc_nativeSend
  (JNIEnv *, jobject, jstring);

/*
 * Class:     USBAERatc
 * Method:    nativeReceive
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_net_sf_jaer_hardwareinterface_usb_usbaermapper_USBAERatc_nativeReceive
  (JNIEnv *, jobject, jstring);

/*
 * Class:     USBAERatc
 * Method:    nativeDownloadFromMapper
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_net_sf_jaer_hardwareinterface_usb_usbaermapper_USBAERatc_nativeDownloadFromMapper
  (JNIEnv *, jobject, jstring);

/*
 * Class:     USBAERatc
 * Method:    nativeSendDesc
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_net_sf_jaer_hardwareinterface_usb_usbaermapper_USBAERatc_nativeSendDesc
  (JNIEnv *, jobject, jstring);

/*
 * Class:     USBAERatc
 * Method:    nativeSendCommand
 * Signature: (Ljava/lang/String;)V
 */
JNIEXPORT void JNICALL Java_net_sf_jaer_hardwareinterface_usb_usbaermapper_USBAERatc_nativeSendCommand
  (JNIEnv *, jobject, jstring);

JNIEXPORT jboolean JNICALL Java_net_sf_jaer_hardwareinterface_usb_usbaermapper_USBAERatc_nativePrueba
  (JNIEnv *, jobject, jstring);

#ifdef __cplusplus
}
#endif
#endif

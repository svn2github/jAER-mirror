/*
 * AE3DPlayerRecorderFrame.java
 *
 * Created on 11. Dezember 2007, 14:43
 */

package ch.unizh.ini.jaer.projects.stereo3D;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.io.File;
import java.io.IOException;

import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

import net.sf.jaer.eventio.AEDataFile;
/**
 *
 * @author  Hello Stranger
 */
public class AE3DPlayerRecorderFrame extends javax.swing.JFrame  implements PropertyChangeListener {

	volatile boolean allowSliderStateChange = false;

	/**
	 * Creates new form AE3DPlayerRecorderFrame
	 */
	public AE3DPlayerRecorderFrame() {
		initComponents();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
	private void initComponents() {
		jPanel1 = new javax.swing.JPanel();
		jButton1 = new javax.swing.JButton();
		jButton2 = new javax.swing.JButton();
		jLabel1 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jButton5 = new javax.swing.JButton();
		jButton6 = new javax.swing.JButton();
		jButton7 = new javax.swing.JButton();
		jButton8 = new javax.swing.JButton();
		jButton9 = new javax.swing.JButton();
		jLabel5 = new javax.swing.JLabel();
		jLabel6 = new javax.swing.JLabel();
		jLabel7 = new javax.swing.JLabel();
		playerSlider = new javax.swing.JSlider();
		jButton3 = new javax.swing.JButton();
		jButton4 = new javax.swing.JButton();
		jSeparator1 = new javax.swing.JSeparator();
		jLabel8 = new javax.swing.JLabel();
		jButton10 = new javax.swing.JButton();

		getContentPane().setLayout(null);

		setTitle("Player/Recorder");
		jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 0));
		jButton1.setText("Play");
		jButton1.setEnabled(false);
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1play(evt);
			}
		});

		jButton2.setText("Pause");
		jButton2.setEnabled(false);
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2pause(evt);
			}
		});

		jLabel1.setText("File :");

		jLabel3.setText("Time-bin :");

		jButton5.setText("S");
		jButton5.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton5slow(evt);
			}
		});

		jButton6.setText("F");
		jButton6.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton6faster(evt);
			}
		});

		jButton7.setText("choose..");
		jButton7.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton7choose(evt);
			}
		});

		jButton8.setText("Stop");
		jButton8.setEnabled(false);
		jButton8.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton8stop(evt);
			}
		});

		jButton9.setText("Revert");
		jButton9.setEnabled(false);
		jButton9.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton9revert(evt);
			}
		});

		jLabel5.setText("20 ms");

		jLabel6.setText("none");
		jLabel6.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

		jLabel7.setText("Dir: Forward");

		playerSlider.setMaximum(1000);
		playerSlider.setValue(0);
		playerSlider.setEnabled(false);
		playerSlider.addMouseListener(new java.awt.event.MouseAdapter() {
			@Override
			public void mousePressed(java.awt.event.MouseEvent evt) {
				playerSliderMousePressed(evt);
			}
			@Override
			public void mouseReleased(java.awt.event.MouseEvent evt) {
				playerSliderMouseReleased(evt);
			}
		});
		playerSlider.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
			@Override
			public void propertyChange(java.beans.PropertyChangeEvent evt) {
				playerSliderPropertyChange(evt);
			}
		});

		jButton3.setText("Record 3D Events");
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3record(evt);
			}
		});

		jButton4.setText("Stop");
		jButton4.setEnabled(false);
		jButton4.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton4endRecord(evt);
			}
		});

		jButton10.setText("Record 3D x,y,z");
		jButton10.addActionListener(new java.awt.event.ActionListener() {
			@Override
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton10record(evt);
			}
		});

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(
			jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
			.addGroup(jPanel1Layout.createSequentialGroup()
				.addContainerGap()
				.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
					.addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 487, Short.MAX_VALUE)
					.addGroup(jPanel1Layout.createSequentialGroup()
						.addComponent(jButton1)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jButton2)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(jButton8)
						.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
						.addComponent(playerSlider, javax.swing.GroupLayout.DEFAULT_SIZE, 290, Short.MAX_VALUE)
						.addContainerGap())
						.addGroup(jPanel1Layout.createSequentialGroup()
							.addComponent(jLabel1)
							.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
							.addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
							.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
							.addComponent(jButton7)
							.addContainerGap(149, Short.MAX_VALUE))
							.addGroup(jPanel1Layout.createSequentialGroup()
								.addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(16, 16, 16)
								.addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addComponent(jButton9)
								.addGap(25, 25, 25)
								.addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addContainerGap(26, Short.MAX_VALUE))
								.addGroup(jPanel1Layout.createSequentialGroup()
									.addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
									.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									.addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
									.addGap(16, 16, 16)
									.addComponent(jButton4)
									.addGap(20, 20, 20)
									.addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
									.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
			);
		jPanel1Layout.setVerticalGroup(
			jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
			.addGroup(jPanel1Layout.createSequentialGroup()
				.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
					.addGroup(jPanel1Layout.createSequentialGroup()
						.addGap(1, 1, 1)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
							.addComponent(jButton1)
							.addComponent(jButton2)
							.addComponent(jButton8)))
							.addComponent(playerSlider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
							.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
							.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
								.addComponent(jLabel1)
								.addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
								.addComponent(jButton7))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
									.addComponent(jLabel3)
									.addComponent(jLabel5)
									.addComponent(jButton5)
									.addComponent(jButton6)
									.addComponent(jButton9)
									.addComponent(jLabel7))
									.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									.addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
									.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
									.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
										.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
											.addComponent(jButton10)
											.addComponent(jButton4))
											.addComponent(jButton3))
											.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
			);
		getContentPane().add(jPanel1);

		jPanel1.setBounds(10, 10, 490, 140);

		pack();
	}// </editor-fold>//GEN-END:initComponents

	private void jButton10record(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10record
		jButton3.setEnabled(false);
		jButton10.setEnabled(false);
		jButton4.setEnabled(true);
		jLabel8.setText("! Recording !");
		recorder.record( Event3D.DIRECT3D );
	}//GEN-LAST:event_jButton10record

	private void playerSliderPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_playerSliderPropertyChange

	}//GEN-LAST:event_playerSliderPropertyChange

	private void playerSliderMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playerSliderMouseReleased
		//player.play();
		// allowSliderStateChange = true;
		//  if(player!=null){
		synchronized(player){
			float fracPos=(float)playerSlider.getValue()/(playerSlider.getMaximum());

			if(player.getInputStream()!=null){
				//int oldtime=player.getInputStream().getMostRecentTimestamp();
				player.setFractionalPosition(fracPos); // sets position in events
				int time=player.getInputStream().getMostRecentTimestamp();
				player.getInputStream().setCurrentStartTimestamp(time);
				player.clear();
				// player.play();
			}
			//    }
			//    player.play();
		}
	}//GEN-LAST:event_playerSliderMouseReleased

	private void playerSliderMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_playerSliderMousePressed
		//  player.pause();

	}//GEN-LAST:event_playerSliderMousePressed

	private void jButton1play(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1play
		// enable pause and stop menu, disable play
		jButton1.setEnabled(false);
		jButton2.setEnabled(true);
		jButton8.setEnabled(true);
		playerSlider.setEnabled(true);
		player.play();
	}//GEN-LAST:event_jButton1play

	private void jButton2pause(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2pause
		// enable play disable pause
		jButton1.setEnabled(true);
		jButton2.setEnabled(false);
		player.pause();
	}//GEN-LAST:event_jButton2pause

	private void jButton5slow(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5slow
		player.slowDown();
		float sp = player.getSpeed();
		// update label
		if(sp>1000){
			int spi = Math.round(sp/1000);
			jLabel5.setText(spi+" ms");
		} else {
			jLabel5.setText(sp+" us");
		}
	}//GEN-LAST:event_jButton5slow

	private void jButton6faster(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6faster
		player.speedUp();
		float sp = player.getSpeed();
		// update label
		if(sp>1000){
			int spi = Math.round(sp/1000);
			jLabel5.setText(spi+" ms");
		} else {
			jLabel5.setText(sp+" us");
		}
	}//GEN-LAST:event_jButton6faster

	private void jButton7choose(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7choose
		// open file chooser
		JFileChooser fileChooser=new JFileChooser();
		int retValue=fileChooser.showOpenDialog(this);
		if(retValue==JFileChooser.APPROVE_OPTION){
			file=fileChooser.getSelectedFile();
			player.openFile( file );
			// update label
			jLabel6.setText(file.getName());
			// enable play
			jButton1.setEnabled(true);
			//                SwingUtilities.invokeLater(new Runnable(){
			//                    public void run(){
			//                        sequenceFile(lastFile);
			//                    }
			//                });
		}
	}//GEN-LAST:event_jButton7choose

	private void jButton8stop(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8stop
		// enable play, disable pause and stop
		jButton1.setEnabled(true);
		jButton2.setEnabled(false);
		jButton8.setEnabled(false);
		playerSlider.setEnabled(false);
		player.stop();
	}//GEN-LAST:event_jButton8stop

	private void jButton9revert(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9revert
		// should check if not null
		player.revert();
		// update label
		if(player.isForward()){
			jLabel7.setText("Dir: Forward");
		} else {
			jLabel7.setText("Dir: Backward");
		}
	}//GEN-LAST:event_jButton9revert



	File file;
	AE3DPlayerInterface player;
	AE3DRecorderInterface recorder;

	public void setPlayer( AE3DPlayerInterface player ){
		this.player = player;
	}
	public void setRecorder( AE3DRecorderInterface recorder ){
		this.recorder = recorder;
	}


	/** messages come back here.
	 * This methods sets the GUI components to a consistent state, using a flag to tell the slider that it has not been set by
	 * a user mouse action
	 */
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		if(evt.getPropertyName().equals("position")){ // comes from AE3DFileInputStream
			//            System.out.println("slider property change new val="+evt.getNewValue());
			// sliderDontProcess=true;
			// note this cool semaphore/flag trick to avoid processing the
			// event generated when we programmatically set the slider position here
			playerSlider.setValue(Math.round(player.getFractionalPosition()*playerSlider.getMaximum()));
		}
		//else if(evt.getPropertyName().equals("readerStarted")){ // comes from hardware interface AEReader thread
		//            log.info("AEViewer.propertyChange: AEReader started, fixing device control menu");
		// cypress reader started, can set device control for cypress usbio reader thread
		//  fixDeviceControlMenuItems();
		//  }
	}




	private void jButton4endRecord(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4endRecord
		jButton3.setEnabled(true);
		jButton10.setEnabled(true);
		jButton4.setEnabled(false);
		jLabel8.setText("");


		File recordFile = recorder.stopRecording( );
		String fn=recordFile.getName();
		String base=fn.substring(0,fn.lastIndexOf(AEDataFile.DATA_FILE_EXTENSION));
		// we'll add the extension back later

		JFileChooser fileChooser=new JFileChooser();

		FileNameExtensionFilter filter = new FileNameExtensionFilter(
			"DAT Files", "dat");
		fileChooser.setFileFilter(filter);
		fileChooser.setSelectedFile(new File(base));
		try {

			int retValue=fileChooser.showOpenDialog(this);
			if(retValue==JFileChooser.APPROVE_OPTION){
				file=fileChooser.getSelectedFile();
				// enable stop record, disable record

				if(!file.getName().endsWith(AEDataFile.DATA_FILE_EXTENSION)){
					file=new File(file.getCanonicalPath()+AEDataFile.DATA_FILE_EXTENSION);
				}
				// we'll rename the logged data file to the selection
				boolean renamed=recordFile.renameTo(file);
				if(!renamed){

					// confirm overwrite
					int overwrite=JOptionPane.showConfirmDialog(fileChooser,"Overwrite file?","Overwrite warning",JOptionPane.WARNING_MESSAGE,JOptionPane.OK_CANCEL_OPTION);
					if(overwrite==JOptionPane.OK_OPTION){
						// we need to delete the file
						boolean deletedOld=file.delete();
						if(deletedOld) {
							recordFile.renameTo(file);
						}
					}else{
						fileChooser.setDialogTitle("Couldn't save file there, try again");
					}
				}
			}else{
				// user hit cancel, delete logged data
				boolean deleted=recordFile.delete();
				if(deleted){
					//log.info("Deleted temporary logging file "+recordFile);
				}else{
					//log.warning("couldn't delete temporary logging file "+recordFile);
				}
			}
		}catch(IOException e){
			e.printStackTrace();
		}
		//enable record
	}//GEN-LAST:event_jButton4endRecord

	private void jButton3record(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3record

		jButton3.setEnabled(false);
		jButton10.setEnabled(false);
		jButton4.setEnabled(true);
		jLabel8.setText("! Recording !");
		recorder.record( Event3D.INDIRECT3D );
	}//GEN-LAST:event_jButton3record

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		java.awt.EventQueue.invokeLater(new Runnable() {
			@Override
			public void run() {
				new AE3DPlayerRecorderFrame().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton10;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JButton jButton4;
	private javax.swing.JButton jButton5;
	private javax.swing.JButton jButton6;
	private javax.swing.JButton jButton7;
	private javax.swing.JButton jButton8;
	private javax.swing.JButton jButton9;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JSeparator jSeparator1;
	private javax.swing.JSlider playerSlider;
	// End of variables declaration//GEN-END:variables

}

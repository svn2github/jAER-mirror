/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320 */

#ifndef _Included_net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320
#define _Included_net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320
#ifdef __cplusplus
extern "C" {
#endif
#undef net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320_MAX_BYTES_PER_BIAS
#define net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320_MAX_BYTES_PER_BIAS 4L
/*
 * Class:     net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320
 * Method:    nativeGetAddresses
 * Signature: ()[S
 */
JNIEXPORT jshortArray JNICALL Java_net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320_nativeGetAddresses
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320
 * Method:    nativeGetTimestamps
 * Signature: ()[I
 */
JNIEXPORT jintArray JNICALL Java_net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320_nativeGetTimestamps
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320
 * Method:    nativeOverrunOccured
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320_nativeOverrunOccured
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320
 * Method:    nativeOpen
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320_nativeOpen__
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320
 * Method:    nativeClose
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320_nativeClose
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320
 * Method:    nativeAcquireAvailableEventsFromDriver
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320_nativeAcquireAvailableEventsFromDriver
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320
 * Method:    nativeGetNumEventsAcquired
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320_nativeGetNumEventsAcquired
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320
 * Method:    nativeSetEventAcquisitionEnabled
 * Signature: (Z)I
 */
JNIEXPORT jint JNICALL Java_net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320_nativeSetEventAcquisitionEnabled
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320
 * Method:    nativeGetNumDevices
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320_nativeGetNumDevices
  (JNIEnv *, jobject);

/*
 * Class:     net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320
 * Method:    nativeOpen
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320_nativeOpen__I
  (JNIEnv *, jobject, jint);

/*
 * Class:     net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320
 * Method:    nativeSetPowerdown
 * Signature: (Z)I
 */
JNIEXPORT jint JNICALL Java_net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320_nativeSetPowerdown
  (JNIEnv *, jobject, jboolean);

/*
 * Class:     net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320
 * Method:    nativeSendBiases
 * Signature: ([B)I
 */
JNIEXPORT jint JNICALL Java_net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320_nativeSendBiases
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320
 * Method:    nativeFlashBiases
 * Signature: ([B)I
 */
JNIEXPORT jint JNICALL Java_net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320_nativeFlashBiases
  (JNIEnv *, jobject, jbyteArray);

/*
 * Class:     net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320
 * Method:    nativeResetTimestamps
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_net_sf_jaer_hardwareinterface_usb_silabs_SiLabsC8051F320_nativeResetTimestamps
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif

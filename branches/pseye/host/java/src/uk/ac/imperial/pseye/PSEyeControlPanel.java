
package uk.ac.imperial.pseye;

import java.util.Observable;
import java.util.Observer;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.JPanel;
import java.util.Hashtable;
import javax.swing.JLabel;

/*
 * JPanel used to control PSEye settings.
 * Interacts through the PSEyeDriverInterface so can use a PSEyechip or camera 
 * itself. 
 * 
 * @author mlk
 */
public class PSEyeControlPanel extends JPanel implements Observer {

    private final static Logger log = Logger.getLogger("PSEyeControlPanel");
    public PSEyeDriverInterface driver;

    /* Create a control panel 
     * 
     * @param driver: the interface to observer and use to control the camera
     */
    public PSEyeControlPanel(PSEyeDriverInterface driver) {
        this.driver = driver;
        // create all panel components
        initComponents();
        
        // read current driver settings
        setComponents();
        
        // add this to the driver Observable
        driver.getObservable().addObserver(this);
    }
    
    /*
    private void setFileModified() {
        if (driver != null && driver.getAeViewer() != null && driver.getAeViewer().getBiasgenFrame() != null) {
            driver.getAeViewer().getBiasgenFrame().setFileModified(true);
        }
    }
     */
    
    /* Read the driver settings and set components to these values 
     * 
     */
    private void setComponents() {
        Object[] modes = driver.getModes().toArray();
        modeCB.setModel(new DefaultComboBoxModel(modes));
        modeCB.setEnabled(modes.length > 1);
        modeCB.setSelectedItem(driver.getMode().name());
        
        Object[] resolutions = driver.getResolutions().toArray();
        resCB.setModel(new DefaultComboBoxModel(resolutions));
        resCB.setEnabled(resolutions.length > 1);
        resCB.setSelectedItem(driver.getResolution());
        
        Object[] frameRates = driver.getFrameRates().toArray();
        rateCB.setModel(new DefaultComboBoxModel(frameRates));
        rateCB.setEnabled(frameRates.length > 1);
        rateCB.setSelectedItem(driver.getFrameRate());
        
        agCB.setSelected(driver.getAutoGain());
        aeCB.setSelected(driver.getAutoExposure());
        abCB.setSelected(driver.getAutoBalance());
        
        expSp.setModel(new SpinnerNumberModel(driver.getExposure(), 
                driver.getMinExposure(), driver.getMaxExposure(), 1));
        expSp.setValue(driver.getExposure());
        expSp.setEnabled(!aeCB.isSelected());
        
        gainSl.setMinimum(driver.getMinGain());
        gainSl.setMaximum(driver.getMaxGain());
        gainSl.setValue(driver.getGain());
        Hashtable labelTable = new Hashtable();
        labelTable.put(driver.getMinGain(), new JLabel(Integer.toString(driver.getMinGain())));
        labelTable.put(driver.getMaxGain(), new JLabel(Integer.toString(driver.getMaxGain())));
        gainSl.setLabelTable(labelTable);
        gainSl.setPaintLabels(true);
                
        gainSp.setModel(new SpinnerNumberModel(driver.getGain(), 
                driver.getMinGain(), driver.getMaxGain(), 1));
        gainSp.setValue(driver.getGain());
        gainSp.setEnabled(!agCB.isSelected());
        
    }

   /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        modeCB = new javax.swing.JComboBox();
        resCB = new javax.swing.JComboBox();
        rateCB = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        aeCB = new javax.swing.JCheckBox();
        expSp = new javax.swing.JSpinner();
        jPanel4 = new javax.swing.JPanel();
        abCB = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        gainSp = new javax.swing.JSpinner();
        agCB = new javax.swing.JCheckBox();
        gainSl = new javax.swing.JSlider();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        gainSp1 = new javax.swing.JSpinner();

        setBorder(javax.swing.BorderFactory.createTitledBorder("PS Eye Control"));
        setMaximumSize(new java.awt.Dimension(430, 280));
        setMinimumSize(new java.awt.Dimension(430, 280));
        setPreferredSize(new java.awt.Dimension(430, 280));

        jLabel6.setText("Mode");

        jLabel11.setText("Resolution");

        jLabel12.setText("Framerate");

        modeCB.setMaximumRowCount(30);
        modeCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modeCBActionPerformed(evt);
            }
        });

        resCB.setMaximumRowCount(30);
        resCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resCBActionPerformed(evt);
            }
        });

        rateCB.setMaximumRowCount(30);
        rateCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rateCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rateCB, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(modeCB, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(resCB, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(modeCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(resCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(rateCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Camera", jPanel1);

        aeCB.setText("Auto");
        aeCB.setToolTipText("Enables automatic exposure control");
        aeCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aeCBActionPerformed(evt);
            }
        });

        expSp.setToolTipText("CL eye exposure value (0-511)");
        expSp.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                expSpStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(aeCB)
                .addContainerGap(167, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(119, 119, 119)
                    .addComponent(expSp, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(119, Short.MAX_VALUE)))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(84, Short.MAX_VALUE)
                .addComponent(aeCB)
                .addGap(23, 23, 23))
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel3Layout.createSequentialGroup()
                    .addGap(56, 56, 56)
                    .addComponent(expSp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(56, Short.MAX_VALUE)))
        );

        jTabbedPane1.addTab("Exposure", jPanel3);

        abCB.setText("Auto");
        abCB.setToolTipText("Enables automatic exposure control");
        abCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(79, 79, 79)
                .addComponent(abCB)
                .addContainerGap(167, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(84, Short.MAX_VALUE)
                .addComponent(abCB)
                .addGap(23, 23, 23))
        );

        jTabbedPane1.addTab("Balance", jPanel4);

        gainSp.setToolTipText("CL eye gain (0-79)");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, gainSl, org.jdesktop.beansbinding.ObjectProperty.create(), gainSp, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        gainSp.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                gainSpStateChanged(evt);
            }
        });

        agCB.setText("Auto");
        agCB.setToolTipText("Enables AGC");
        agCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agCBActionPerformed(evt);
            }
        });

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, gainSp, org.jdesktop.beansbinding.ObjectProperty.create(), gainSl, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        jLabel2.setText("Value");

        jLabel3.setText("Value");

        gainSp1.setToolTipText("CL eye gain (0-79)");
        gainSp1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                gainSp1StateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(gainSp1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(gainSp, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addComponent(agCB)
                .addGap(53, 53, 53))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gainSl, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(gainSl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(gainSp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(gainSp1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(agCB))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Gain", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(83, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void agCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agCBActionPerformed
        driver.setAutoGain(agCB.isSelected());
        gainSp.setEnabled(!agCB.isSelected());
}//GEN-LAST:event_agCBActionPerformed

    private void aeCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aeCBActionPerformed
        driver.setAutoExposure(aeCB.isSelected());
        expSp.setEnabled(!aeCB.isSelected());
}//GEN-LAST:event_aeCBActionPerformed

    private void modeCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modeCBActionPerformed
        try {
            PSEyeDriverInterface.Mode mode = (PSEyeDriverInterface.Mode) modeCB.getSelectedItem();
            driver.setMode(mode);
        } catch (Exception e) {
            log.warning(e.toString());
        }
    }//GEN-LAST:event_modeCBActionPerformed

    private void gainSpStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_gainSpStateChanged
        driver.setGain((Integer) gainSp.getValue());
    }//GEN-LAST:event_gainSpStateChanged

    private void expSpStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_expSpStateChanged
        driver.setExposure((Integer) expSp.getValue());
    }//GEN-LAST:event_expSpStateChanged

    private void resCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resCBActionPerformed

        try {
            PSEyeDriverInterface.Resolution resolution = (PSEyeDriverInterface.Resolution) resCB.getSelectedItem();
            driver.setResolution(resolution);
        } catch (Exception e) {
            log.warning(e.toString());
        }     
    }//GEN-LAST:event_resCBActionPerformed

    private void rateCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rateCBActionPerformed

        try {
            int frameRate = (Integer) rateCB.getSelectedItem();
            driver.setFrameRate(frameRate);
        } catch (Exception e) {
            log.warning(e.toString());
        }     
    }//GEN-LAST:event_rateCBActionPerformed

    private void gainSp1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_gainSp1StateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_gainSp1StateChanged

    private void abCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abCBActionPerformed
        driver.setAutoBalance(abCB.isSelected());
        expSp.setEnabled(!aeCB.isSelected());
    }//GEN-LAST:event_abCBActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox abCB;
    private javax.swing.JCheckBox aeCB;
    private javax.swing.JCheckBox agCB;
    private javax.swing.JSpinner expSp;
    private javax.swing.JSlider gainSl;
    private javax.swing.JSpinner gainSp;
    private javax.swing.JSpinner gainSp1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JComboBox modeCB;
    private javax.swing.JComboBox rateCB;
    private javax.swing.JComboBox resCB;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the driver
     */
    public PSEyeDriverInterface getDriver() {
        return driver;
    }

    /**
     * @param driver the driver to set
     */
    public void setDriver(PSEyeDriverInterface driver) {
        this.driver = driver;
    }

    @Override
    public void update(Observable o, Object arg) {
        if (o != null && o == driver && arg instanceof PSEyeDriverInterface.EVENT) {
            // update all components and models just in case
            setComponents();
        }
    }
}

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Head6DOF_GUI.java
 *
 * Created on Jul 7, 2011, 11:51:37 PM
 */
package org.ine.telluride.jaer.tell2011.head6axis;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.geom.Point2D;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;
import net.sf.jaer.hardwareinterface.HardwareInterfaceException;

/**
 * Allows mouse control of head.
 * @author tobi
 */
public class Head6DOF_GUI extends javax.swing.JFrame implements PropertyChangeListener {

    private static Logger log = Logger.getLogger("Head6DOF_ServoController");
    Head6DOF_ServoController controller = null;
    private int w = 200, h = 200;

    /** Creates new form Head6DOF_GUI */
    public Head6DOF_GUI(Head6DOF_ServoController contrl) {
        controller = contrl;
        controller.getSupport().addPropertyChangeListener(this);
        initComponents();
        eyePanel.setPreferredSize(new Dimension(w, h));
        headPanel.setPreferredSize(new Dimension(w, h));
        pack();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        eyePanel = new javax.swing.JPanel();
        vergenceSlider = new javax.swing.JSlider();
        headPanel = new javax.swing.JPanel();

        setTitle("HeadControl");
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        eyePanel.setBackground(new java.awt.Color(255, 255, 255));
        eyePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("eye direction"));
        eyePanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                eyePanelMouseDragged(evt);
            }
        });

        javax.swing.GroupLayout eyePanelLayout = new javax.swing.GroupLayout(eyePanel);
        eyePanel.setLayout(eyePanelLayout);
        eyePanelLayout.setHorizontalGroup(
            eyePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 287, Short.MAX_VALUE)
        );
        eyePanelLayout.setVerticalGroup(
            eyePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 236, Short.MAX_VALUE)
        );

        getContentPane().add(eyePanel);

        vergenceSlider.setToolTipText("vergence");
        vergenceSlider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                vergenceSliderStateChanged(evt);
            }
        });
        getContentPane().add(vergenceSlider);

        headPanel.setBackground(new java.awt.Color(255, 255, 255));
        headPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("head direction"));
        headPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                headPanelMouseDragged(evt);
            }
        });

        javax.swing.GroupLayout headPanelLayout = new javax.swing.GroupLayout(headPanel);
        headPanel.setLayout(headPanelLayout);
        headPanelLayout.setHorizontalGroup(
            headPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 287, Short.MAX_VALUE)
        );
        headPanelLayout.setVerticalGroup(
            headPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 236, Short.MAX_VALUE)
        );

        getContentPane().add(headPanel);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void eyePanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eyePanelMouseDragged
        float p = getPan(evt), t = getTilt(evt);
        try {
            controller.setEyeGazeDirection(p, t);
            repaint();
        } catch (Exception ex) {
            log.warning(ex.toString());
        }
    }//GEN-LAST:event_eyePanelMouseDragged

    private void headPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_headPanelMouseDragged
       float p = getPan(evt), t = getTilt(evt);
        try {
            controller.setHeadDirection(p, t);
            repaint();
        } catch (Exception ex) {
            log.warning(ex.toString());
        }
    }//GEN-LAST:event_headPanelMouseDragged

    private float vergenceFromSlider(){
        int v=vergenceSlider.getValue();
        float vergence=controller.VERGENCE_LIMIT*(v-50f)/50f;
        return vergence;
    }
    private void vergenceSliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_vergenceSliderStateChanged
        float vergence=vergenceFromSlider();
        try {
            controller.setVergence(vergence);
        } catch (Exception ex) {
            log.warning(ex.toString());
        }
    }//GEN-LAST:event_vergenceSliderStateChanged

    private float getPan(MouseEvent evt) {
        int x = evt.getX();
        float pan = (float) x / ((JPanel)evt.getSource()).getWidth(); // 0-1
        pan=2*pan-1;
//        log.info("computed pan="+pan);
        return pan;

    }

    private float getTilt(MouseEvent evt) {
        int y = evt.getY();
        int h=((JPanel)evt.getSource()).getHeight();
        float tilt = (float) (h - y) / h;
        tilt=tilt*2-1;
//        log.info("computed y="+y+" tilt="+tilt);
        return tilt;
    }
    private Point p2 = new Point();

    // converts from gaze to to panel coordinates
    private Point gaze2pix(JPanel pan, Point2D.Float gaze) {
        int h=pan.getHeight(), w=pan.getWidth();
        // (g+1)/2 ranges 0:1
        p2.setLocation((gaze.x + 1) / 2 * w, h-((gaze.y + 1) / 2 * h)); // y starts from top in AWT, so flip y here
        return p2;
    }

    @Override
    public void paint(Graphics g) {
        final int r = 6;
        super.paint(g);
        Head6DOF_ServoController.GazeDirection gaze = controller.gazeDirection; // current state of all servos in -1:1 coordinates

        int h=eyePanel.getHeight();
        Point p = gaze2pix(eyePanel, gaze.gazeDirection);
        g.drawLine(p.x, p.y + r, p.x,  p.y - r);
        g.drawLine(p.x - r, p.y, p.x + r, p.y);

        g = headPanel.getGraphics();
        p = gaze2pix(headPanel, gaze.headDirection);
        g.drawLine(p.x, p.y + r, p.x, p.y - r);
        g.drawLine(p.x - r, p.y, p.x + r, p.y);

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel eyePanel;
    private javax.swing.JPanel headPanel;
    private javax.swing.JSlider vergenceSlider;
    // End of variables declaration//GEN-END:variables

    @Override
    public void propertyChange(PropertyChangeEvent evt) {
        repaint();
    }
}

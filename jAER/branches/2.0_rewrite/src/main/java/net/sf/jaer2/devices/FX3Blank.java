package net.sf.jaer2.devices;

import net.sf.jaer2.devices.components.controllers.Controller;
import net.sf.jaer2.devices.components.controllers.FX3;
import net.sf.jaer2.devices.components.misc.memory.Flash_SPI;
import net.sf.jaer2.devices.components.misc.memory.Memory;
import net.sf.jaer2.eventio.translators.Translator;

import org.usb4java.Device;

public class FX3Blank extends USBDevice {
	@SuppressWarnings("hiding")
	public static final short VID = 0x04B4;
	@SuppressWarnings("hiding")
	public static final short PID = 0x00F3;

	public FX3Blank(final Device usbDevice) {
		super("FX3 Blank", "Blank FX3 device, needs to have firmware loaded onto it.", FX3Blank.VID, FX3Blank.PID,
			USBDevice.DID, usbDevice);

		final Controller fx3 = new FX3(getConfigNode());
		addComponent(fx3);

		fx3.firmwareToRam(true);

		// Size in KB and SPI address.
		final Memory flash = new Flash_SPI(getConfigNode(),512, 0);
		flash.setProgrammer(fx3);
		addComponent(flash);

		// Support flashing FX3 firmware.
		fx3.firmwareToFlash(flash);
	}

	@Override
	public Class<? extends Translator> getPreferredTranslator() {
		// No events can be generated by the blank devices.
		return null;
	}
}

/*
 * DVS320ControlPanel.java
 *
 * Created on October 26, 2008, 9:37 PM
 */
package ch.unizh.ini.hardware.dvs320;

import java.awt.event.ActionEvent;
import java.util.logging.Logger;
import javax.swing.AbstractAction;
import javax.swing.BoxLayout;
import javax.swing.ButtonGroup;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.border.TitledBorder;

/**
 * Control panel for DVS320 diagnostic output configuration.
 * @author  tobi
 */
public class DVS320ControlPanel extends javax.swing.JPanel {

    static Logger log = Logger.getLogger("DVS320ControlPanel");

    class OutputSelectionAction extends AbstractAction {

        DVS320.Biasgen.OutputMux mux;
        int channel;

        OutputSelectionAction(DVS320.Biasgen.OutputMux m, int i) {
            super(m.getName(i));
            mux = m;
            channel = i;
        }

        public void actionPerformed(ActionEvent e) {
            log.info("Selecting " + mux.getName() + " : " + mux.getName(channel));
            mux.select(channel);
        }
    }
    DVS320 chip;
    boolean panelBuilt = false;

    /** Creates new form DVS320ControlPanel */
    public DVS320ControlPanel(DVS320 chip) {
        this.chip = chip;
        initComponents();
    }

    void buildPanel() {
        if (panelBuilt) {
            return;
        }
        panelBuilt = true;
        DVS320.Biasgen biasgen = (DVS320.Biasgen) chip.getBiasgen();
        DVS320.Biasgen.AllMuxes muxes = biasgen.allMuxes;
        for (DVS320.Biasgen.OutputMux m : muxes) {
            JPanel p = new JPanel();
            p.setAlignmentY(0);
            p.setBorder(new TitledBorder(m.getName()));
            p.setLayout(new BoxLayout(p, BoxLayout.Y_AXIS));
            ButtonGroup group = new ButtonGroup();
            for (int i = 0; i < m.nInputs; i++) {
                JRadioButton b = new JRadioButton(new OutputSelectionAction(m, i));
                b.setFont(b.getFont().deriveFont(10f));
                b.setToolTipText(b.getText());
//                b.setMinimumSize(new Dimension(30, 14));
                group.add(b);
                p.add(b);
            }
            add(p);
        }
        validate();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        setLayout(new java.awt.GridLayout());
    }// </editor-fold>//GEN-END:initComponents

private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
    buildPanel();
}//GEN-LAST:event_formComponentShown
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}

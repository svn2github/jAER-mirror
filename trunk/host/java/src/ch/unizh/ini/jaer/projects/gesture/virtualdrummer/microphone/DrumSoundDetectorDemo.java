/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DrumSoundDetectorDemo.java
 *
 * Created on Mar 31, 2010, 7:35:20 PM
 */
package ch.unizh.ini.jaer.projects.gesture.virtualdrummer.microphone;
import java.awt.*;
import java.awt.Insets;
import net.sf.jaer.util.chart.*;
/**
 *
 * @author tobi
 */
public class DrumSoundDetectorDemo extends javax.swing.JFrame implements DrumBeatSoundEventListener{
    Series series = new Series(2,4000);

    /** Creates new form DrumSoundDetectorDemo */
    public DrumSoundDetectorDemo (){
        initComponents();

    }

    public boolean drawSamples (){
        byte[] b = getVirtualDrummerMicrophoneInput().getBuffer();
        if ( b == null ){
            return false;
        }
        series.clear();
//        System.out.println("");
        for ( int i = 0 ; i < b.length ; i++ ){
            series.add(i,b[i]);
//            System.out.print(i + "," + b[i] + " ");
        }
        timeAxis.setRange(0,b.length);

        xYChart1.repaint();
        return true;
    }
    Axis timeAxis;

    protected void initChart (){
        xYChart1.setInsets(new Insets(10,10,10,10)); // top left bottom right
        xYChart1.setBackground(Color.YELLOW);
        series = new Series(2,getVirtualDrummerMicrophoneInput().getBufferSize());
        timeAxis = new Axis(0,100);
        timeAxis.setTitle("time");
        timeAxis.setUnit("sample");
        timeAxis.setRange(0.0,100);
        Axis ratio = new Axis(-127,127);
        ratio.setTitle("signal");
        ratio.setUnit("");
        Axis[] axes = new Axis[]{ timeAxis,ratio };
        Category category = new Category(series,axes);
        category.setColor(new float[]{ 1.0f,0.0f,0.0f });
//        series.setLineWidth(4);
        xYChart1.addCategory(category);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings ("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        thrSl = new javax.swing.JSlider();
        hysSl = new javax.swing.JSlider();
        panel1 = new java.awt.Panel();
        xYChart1 = new net.sf.jaer.util.chart.XYChart();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        beatButton = new javax.swing.JToggleButton();
        thrSp = new javax.swing.JSpinner();
        hysSp = new javax.swing.JSpinner();
        jLabel3 = new javax.swing.JLabel();
        tauSp = new javax.swing.JSpinner();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${virtualDrummerMicrophoneInput.threshold}"), thrSl, org.jdesktop.beansbinding.BeanProperty.create("value"), "thr");
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${virtualDrummerMicrophoneInput.hysteresis}"), hysSl, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        xYChart1.setTitle("Audio Samples");

        javax.swing.GroupLayout xYChart1Layout = new javax.swing.GroupLayout(xYChart1);
        xYChart1.setLayout(xYChart1Layout);
        xYChart1Layout.setHorizontalGroup(
            xYChart1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 569, Short.MAX_VALUE)
        );
        xYChart1Layout.setVerticalGroup(
            xYChart1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 209, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(xYChart1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panel1Layout.setVerticalGroup(
            panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(xYChart1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLabel1.setText("threshold");

        jLabel2.setText("hysteresis");

        beatButton.setText("Beat");
        beatButton.setEnabled(false);

        thrSp.setModel(new javax.swing.SpinnerNumberModel());

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, thrSl, org.jdesktop.beansbinding.ELProperty.create("${value}"), thrSp, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, hysSl, org.jdesktop.beansbinding.ELProperty.create("${value}"), hysSp, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        jLabel3.setText("tauMs");

        tauSp.setModel(new javax.swing.SpinnerNumberModel(1, 1, 100, 1));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, this, org.jdesktop.beansbinding.ELProperty.create("${virtualDrummerMicrophoneInput.tau}"), tauSp, org.jdesktop.beansbinding.BeanProperty.create("value"));
        bindingGroup.addBinding(binding);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tauSp, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(beatButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(hysSl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hysSp))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(thrSl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(thrSp, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(thrSl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(thrSp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(hysSp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addComponent(hysSl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tauSp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(beatButton))
                .addGap(13, 13, 13)
                .addComponent(panel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main (String args[]){
        java.awt.EventQueue.invokeLater(new Runnable(){
            public void run (){
                new DrumSoundDetectorDemo().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton beatButton;
    private javax.swing.JSlider hysSl;
    private javax.swing.JSpinner hysSp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private java.awt.Panel panel1;
    private javax.swing.JSpinner tauSp;
    private javax.swing.JSlider thrSl;
    private javax.swing.JSpinner thrSp;
    private net.sf.jaer.util.chart.XYChart xYChart1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

    public void drumBeatSoundOccurred (DrumBeatSoundEvent e){
        beatButton.setSelected(!beatButton.isSelected());
    }
    public VirtualDrummerMicrophoneInput virtualDrummerMicrophoneInput;

    /**
     * @return the virtualDrummerMicrophoneInput
     */
    public ch.unizh.ini.jaer.projects.gesture.virtualdrummer.microphone.VirtualDrummerMicrophoneInput getVirtualDrummerMicrophoneInput (){
        return virtualDrummerMicrophoneInput;
    }

    /**
     * @param virtualDrummerMicrophoneInput the virtualDrummerMicrophoneInput to set
     */
    public void setVirtualDrummerMicrophoneInput (ch.unizh.ini.jaer.projects.gesture.virtualdrummer.microphone.VirtualDrummerMicrophoneInput virtualDrummerMicrophoneInput){
        this.virtualDrummerMicrophoneInput = virtualDrummerMicrophoneInput;
        if ( virtualDrummerMicrophoneInput != null ){
            initChart();
        }

    }
}

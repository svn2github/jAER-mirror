/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * BinsPanel.java
 *
 * Created on 25.03.2009, 16:52:05
 */
package ch.unizh.ini.jaer.projects.holger;

/**
 *
 * @author Holger
 */
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Graphics;
import java.util.logging.Logger;
import javax.swing.JPanel;
import javax.swing.border.TitledBorder;
import net.sf.jaer.util.chart.Axis;
import net.sf.jaer.util.chart.Category;
import net.sf.jaer.util.chart.Series;
import net.sf.jaer.util.chart.XYChart;

public class ITDBinsPanel extends JPanel {

    private Logger log = Logger.getLogger("JAERITDViewer");
    public ITDBins myBins;
    volatile boolean stopflag = false;
    private long frameDelayMs = 500;
    // activity
    private int NUM_ACTIVITY_SAMPLES = 20;
    private final int ACTVITY_SECONDS_TO_SHOW = 300;
    public Series activitySeries;
    private Axis binAxis;
    private Axis activityAxis;
    private Category activityCategory;
    private XYChart activityChart;
    private double maxActivity = 0;

    /** Creates new form BinsPanel */
    public ITDBinsPanel() {
        initComponents();
    }

    public void init() {
        try {
            log.info("panel init");
            initComponents();

            activitySeries = new Series(2, NUM_ACTIVITY_SAMPLES);

            binAxis = new Axis(0, ACTVITY_SECONDS_TO_SHOW);
            binAxis.setTitle("bins");
            binAxis.setUnit("#bin");

            activityAxis = new Axis(0, 1); // will be normalized
            activityAxis.setTitle("activity");

            activityCategory = new Category(activitySeries, new Axis[]{binAxis, activityAxis});
            activityCategory.setColor(new float[]{0.0f, 0.0f, 1.0f});

            activityChart = new XYChart("");
            activityChart.setBackground(Color.black);
            activityChart.setForeground(Color.white);
            activityChart.setGridEnabled(false);
            activityChart.addCategory(activityCategory);

            activityPanel.setLayout(new BorderLayout());
            activityPanel.add(activityChart, BorderLayout.CENTER);
            ((TitledBorder) activityPanel.getBorder()).setTitle("activity in bins");
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }

    public void updateBins(ITDBins newBins) {
        myBins = newBins;
        NUM_ACTIVITY_SAMPLES = myBins.getNumOfBins() + 1;
        init();
        start();
    }

    synchronized public void start() {
        //super.start();
        stopflag = false;
        log.info("panel starting");
        repaint();  // starts recursive repaint, finishes when paint returns without calling repaint itself
    }

    synchronized public void stop() {
        //super.stop();
        log.info("panel stop, setting stopflag=true");
        stopflag = true;
    }

    @Override
    synchronized public void paint(Graphics g) {
        super.paint(g);
        if (stopflag) {
            log.info("stop is set, not painting again or calling repaint");
            return;
        }
        try {
            if (myBins != null) {
                maxActivity = 0;
                activitySeries.clear();

                //log.info("numbins="+myBins.numOfBins);
                for (int i = 0; i < myBins.getNumOfBins(); i++) {
                    if (maxActivity < myBins.getBin(i)) {
                        maxActivity = myBins.getBin(i);
                    }
                    activitySeries.add(i, myBins.getBin(i));
                }
                activitySeries.add(myBins.getNumOfBins(), 0);

                binAxis.setMaximum(myBins.getNumOfBins());
                binAxis.setMinimum(0);
                activityAxis.setMaximum(maxActivity);
                activityChart.display();
            } else {
                log.warning("myBins==null");
            }
        } catch (Exception e) {
            log.warning("while displaying activity chart caught " + e);
        }

        try {
            repaint(frameDelayMs); // recurse
        } catch (Exception e) {
            log.warning("while repainting, caught exception " + e);
            e.printStackTrace();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        activityPanel = new javax.swing.JPanel();

        setBackground(new java.awt.Color(0, 0, 0));
        setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        setAutoscrolls(true);
        setDoubleBuffered(false);
        setMaximumSize(new java.awt.Dimension(400, 350));
        setMinimumSize(new java.awt.Dimension(400, 350));
        setPreferredSize(new java.awt.Dimension(400, 350));

        activityPanel.setBackground(new java.awt.Color(0, 0, 0));
        activityPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(255, 255, 255))); // NOI18N

        javax.swing.GroupLayout activityPanelLayout = new javax.swing.GroupLayout(activityPanel);
        activityPanel.setLayout(activityPanelLayout);
        activityPanelLayout.setHorizontalGroup(
            activityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 376, Short.MAX_VALUE)
        );
        activityPanelLayout.setVerticalGroup(
            activityPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 326, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(activityPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(activityPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getAccessibleContext().setAccessibleParent(this);
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel activityPanel;
    // End of variables declaration//GEN-END:variables
}

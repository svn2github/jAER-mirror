/*
 * TopologyTrackerControl.java
 *
 * Created on November 25, 2008, 11:17 PM
 */

package ch.unizh.ini.jaer.projects.topology;

import java.util.logging.Level;
import java.util.logging.Logger;


/**
 * A large-button control for the TopologyTrackerDemo.
 * @author  tobi
 */
public class TopologyTrackerControl extends javax.swing.JFrame {
    TopologyTracker filter;
    /** Creates new form TopologyTrackerControl */
    public TopologyTrackerControl(TopologyTracker filter) {
        initComponents();
        freezeLearningToggleButton.setSelected(!filter.isLearningEnabled());
        showStatusToggleButton.setSelected(filter.isShowStatus());
        showRawInputToggleButton.setSelected(!filter.isMapEventsToLearnedTopologyEnabled());
        this.filter=filter;
        pack();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        resetButton = new javax.swing.JButton();
        freezeLearningToggleButton = new javax.swing.JToggleButton();
        showStatusToggleButton = new javax.swing.JToggleButton();
        showRawInputToggleButton = new javax.swing.JToggleButton();

        setTitle("Reset filter");
        getContentPane().setLayout(new java.awt.GridLayout(0, 1));

        resetButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        resetButton.setText("Randomize topology");
        resetButton.setAlignmentX(0.5F);
        resetButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetButtonActionPerformed(evt);
            }
        });
        getContentPane().add(resetButton);

        freezeLearningToggleButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        freezeLearningToggleButton.setText("Freeze learning");
        freezeLearningToggleButton.setAlignmentX(0.5F);
        freezeLearningToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                freezeLearningToggleButtonActionPerformed(evt);
            }
        });
        getContentPane().add(freezeLearningToggleButton);

        showStatusToggleButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        showStatusToggleButton.setText("Show status");
        showStatusToggleButton.setAlignmentX(0.5F);
        showStatusToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showStatusToggleButtonActionPerformed(evt);
            }
        });
        getContentPane().add(showStatusToggleButton);

        showRawInputToggleButton.setFont(new java.awt.Font("Tahoma", 0, 18));
        showRawInputToggleButton.setText("Show raw input");
        showRawInputToggleButton.setAlignmentX(0.5F);
        showRawInputToggleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showRawInputToggleButtonActionPerformed(evt);
            }
        });
        getContentPane().add(showRawInputToggleButton);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
    if (filter != null) {
        boolean oldState=filter.isIgnoreReset();
        filter.setIgnoreReset(false);
        filter.resetFilter();
            try {
                Thread.currentThread().sleep(300);
            } catch (InterruptedException ex) {
                
            }
        filter.setIgnoreReset(oldState);
    }
}//GEN-LAST:event_resetButtonActionPerformed

private void freezeLearningToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_freezeLearningToggleButtonActionPerformed
    if(filter!=null) 
        filter.setLearningEnabled(!freezeLearningToggleButton.isSelected());
}//GEN-LAST:event_freezeLearningToggleButtonActionPerformed

private void showStatusToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showStatusToggleButtonActionPerformed
    if(filter!=null) filter.setShowStatus(showStatusToggleButton.isSelected());
}//GEN-LAST:event_showStatusToggleButtonActionPerformed

private void showRawInputToggleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showRawInputToggleButtonActionPerformed
    if(filter!=null) filter.setMapEventsToLearnedTopologyEnabled(!showRawInputToggleButton.isSelected());
}//GEN-LAST:event_showRawInputToggleButtonActionPerformed



    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton freezeLearningToggleButton;
    private javax.swing.JButton resetButton;
    private javax.swing.JToggleButton showRawInputToggleButton;
    private javax.swing.JToggleButton showStatusToggleButton;
    // End of variables declaration//GEN-END:variables

}
